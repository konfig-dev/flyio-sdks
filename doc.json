{
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "",
    "title": "Fly Machines API",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "api.machines.dev",
  "basePath": "/v1",
  "paths": {
    "/apps": {
      "get": {
        "operationId": "list_apps",
        "parameters": [
          {
            "type": "string",
            "description": "The org slug, or 'personal', to filter apps",
            "name": "org_slug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListAppsResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "create_app",
        "parameters": [
          {
            "description": "App body",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAppRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{app_name}": {
      "get": {
        "operationId": "show_app",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_app",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/apps/{app_name}/machines": {
      "get": {
        "operationId": "list_machines",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Machine"
              }
            }
          }
        }
      },
      "post": {
        "operationId": "create_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "description": "Create machine request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateMachineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}": {
      "get": {
        "operationId": "show_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          }
        }
      },
      "post": {
        "operationId": "update_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMachineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Machine"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/cordon": {
      "post": {
        "operationId": "cordon_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/events": {
      "get": {
        "operationId": "list_machine_events",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MachineEvent"
              }
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/exec": {
      "post": {
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "operationId": "exec_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineExecRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Raw command output bytes are written back",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/lease": {
      "get": {
        "operationId": "show_machine_lease",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Lease"
            }
          }
        }
      },
      "post": {
        "operationId": "create_machine_lease",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main.createLeaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Lease"
            }
          }
        }
      },
      "delete": {
        "operationId": "release_machine_lease",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/metadata": {
      "get": {
        "operationId": "show_machine_metadata",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/metadata/{key}": {
      "post": {
        "operationId": "update_machine_metadata",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Metadata Key",
            "name": "key",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_machine_metadata",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Metadata Key",
            "name": "key",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/ps": {
      "get": {
        "operationId": "list_machine_processes",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Sort by",
            "name": "sort_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Order",
            "name": "order",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main.processStat"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/restart": {
      "post": {
        "operationId": "restart_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Restart timeout as a Go duration string or number of seconds",
            "name": "timeout",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/signal": {
      "post": {
        "operationId": "signal_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/start": {
      "post": {
        "operationId": "start_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/stop": {
      "post": {
        "operationId": "stop_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Optional request body",
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/StopRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/uncordon": {
      "post": {
        "operationId": "uncordon_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/versions": {
      "get": {
        "operationId": "list_versions",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MachineVersion"
              }
            }
          }
        }
      }
    },
    "/apps/{app_name}/machines/{machine_id}/wait": {
      "get": {
        "operationId": "wait_machine",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Machine ID",
            "name": "machine_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "instance? version? TODO",
            "name": "instance_id",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "wait timeout. default 60s",
            "name": "timeout",
            "in": "query"
          },
          {
            "enum": [
              "started",
              "stopped",
              "destroyed"
            ],
            "type": "string",
            "description": "desired state",
            "name": "state",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/apps/{app_name}/volumes": {
      "get": {
        "operationId": "list_volumes",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/queries.GetVolumesByAppIDRow"
              }
            }
          }
        }
      }
    },
    "/apps/{app_name}/volumes/{encoded_id}": {
      "get": {
        "operationId": "get_volume_by_encoded_id",
        "parameters": [
          {
            "type": "string",
            "description": "Fly App Name",
            "name": "app_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Encoded Volume ID",
            "name": "encoded_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/queries.GetVolumeByEncodedIDRow"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "App": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "CheckStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "CreateAppRequest": {
      "type": "object",
      "properties": {
        "app_name": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "org_slug": {
          "type": "string"
        }
      }
    },
    "CreateMachineRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/api.MachineConfig"
        },
        "lease_ttl": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "integer"
        },
        "region": {
          "type": "string"
        },
        "skip_launch": {
          "type": "boolean"
        },
        "skip_service_registration": {
          "type": "boolean"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "Lease": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description or reason for the Lease.",
          "type": "string"
        },
        "expires_at": {
          "description": "ExpiresAt is the unix timestamp in UTC to denote when the Lease will no longer be valid.",
          "type": "integer"
        },
        "nonce": {
          "description": "Nonce is the unique ID autogenerated and associated with the Lease.",
          "type": "string"
        },
        "owner": {
          "description": "Owner is the user identifier which acquired the Lease.",
          "type": "string"
        }
      }
    },
    "ListApp": {
      "type": "object",
      "properties": {
        "machine_count": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "network": {}
      }
    },
    "ListAppsResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListApp"
          }
        },
        "total_apps": {
          "type": "integer"
        }
      }
    },
    "Machine": {
      "type": "object",
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckStatus"
          }
        },
        "config": {
          "$ref": "#/definitions/api.MachineConfig"
        },
        "created_at": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineEvent"
          }
        },
        "id": {
          "type": "string"
        },
        "image_ref": {
          "$ref": "#/definitions/main.imageRef"
        },
        "instance_id": {
          "description": "InstanceID is unique for each version of the machine",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nonce": {
          "description": "Nonce is only every returned on machine creation if a lease_duration was provided.",
          "type": "string"
        },
        "private_ip": {
          "description": "PrivateIP is the internal 6PN address of the machine.",
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "MachineEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "request": {},
        "source": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MachineExecRequest": {
      "type": "object",
      "properties": {
        "cmd": {
          "description": "Deprecated: use Command instead",
          "type": "string"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeout": {
          "type": "integer"
        }
      }
    },
    "MachineVersion": {
      "type": "object",
      "properties": {
        "user_config": {
          "$ref": "#/definitions/api.MachineConfig"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "SignalRequest": {
      "type": "object",
      "properties": {
        "signal": {
          "type": "string",
          "enum": [
            "SIGABRT",
            "SIGALRM",
            "SIGFPE",
            "SIGHUP",
            "SIGILL",
            "SIGINT",
            "SIGKILL",
            "SIGPIPE",
            "SIGQUIT",
            "SIGSEGV",
            "SIGTERM",
            "SIGTRAP",
            "SIGUSR1"
          ]
        }
      }
    },
    "StopRequest": {
      "type": "object",
      "properties": {
        "signal": {
          "type": "string"
        },
        "timeout": {
          "$ref": "#/definitions/api.Duration"
        }
      }
    },
    "UpdateMachineRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/api.MachineConfig"
        },
        "current_version": {
          "type": "string"
        },
        "lease_ttl": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "integer"
        },
        "region": {
          "type": "string"
        },
        "skip_launch": {
          "type": "boolean"
        },
        "skip_service_registration": {
          "type": "boolean"
        }
      }
    },
    "api.DNSConfig": {
      "type": "object",
      "properties": {
        "skip_registration": {
          "type": "boolean"
        }
      }
    },
    "api.Duration": {
      "type": "object",
      "properties": {
        "time.Duration": {
          "type": "integer",
          "enum": [
            -9223372036854776000,
            9223372036854776000,
            1,
            1000,
            1000000,
            1000000000,
            60000000000,
            3600000000000,
            -9223372036854776000,
            9223372036854776000,
            1,
            1000,
            1000000,
            1000000000,
            60000000000,
            3600000000000
          ],
          "x-enum-varnames": [
            "minDuration",
            "maxDuration",
            "Nanosecond",
            "Microsecond",
            "Millisecond",
            "Second",
            "Minute",
            "Hour",
            "minDuration",
            "maxDuration",
            "Nanosecond",
            "Microsecond",
            "Millisecond",
            "Second",
            "Minute",
            "Hour"
          ]
        }
      }
    },
    "api.HTTPOptions": {
      "type": "object",
      "properties": {
        "compress": {
          "type": "boolean"
        },
        "response": {
          "$ref": "#/definitions/api.HTTPResponseOptions"
        }
      }
    },
    "api.HTTPResponseOptions": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "api.MachineCheck": {
      "type": "object",
      "properties": {
        "grace_period": {
          "$ref": "#/definitions/api.Duration"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.MachineHTTPHeader"
          }
        },
        "interval": {
          "$ref": "#/definitions/api.Duration"
        },
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "protocol": {
          "type": "string"
        },
        "timeout": {
          "$ref": "#/definitions/api.Duration"
        },
        "tls_skip_verify": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "api.MachineConfig": {
      "type": "object",
      "properties": {
        "auto_destroy": {
          "type": "boolean"
        },
        "checks": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/api.MachineCheck"
          }
        },
        "disable_machine_autostart": {
          "description": "Deprecated: use Service.Autostart instead",
          "type": "boolean"
        },
        "dns": {
          "$ref": "#/definitions/api.DNSConfig"
        },
        "env": {
          "description": "Fields managed from fly.toml\nIf you add anything here, ensure appconfig.Config.ToMachine() is updated",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "guest": {
          "$ref": "#/definitions/api.MachineGuest"
        },
        "image": {
          "description": "Set by fly deploy or fly machines commands",
          "type": "string"
        },
        "init": {
          "$ref": "#/definitions/api.MachineInit"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metrics": {
          "$ref": "#/definitions/api.MachineMetrics"
        },
        "mounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.MachineMount"
          }
        },
        "processes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.MachineProcess"
          }
        },
        "restart": {
          "$ref": "#/definitions/api.MachineRestart"
        },
        "schedule": {
          "description": "The following fields can only be set or updated by `fly machines run|update` commands\n\"fly deploy\" must preserve them, if you add anything here, ensure it is propagated on deploys",
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.MachineService"
          }
        },
        "size": {
          "description": "Deprecated: use Guest instead",
          "type": "string"
        },
        "standbys": {
          "description": "Standbys enable a machine to be a standby for another. In the event of a hardware failure,\nthe standby machine will be started.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.Static"
          }
        },
        "stop_config": {
          "$ref": "#/definitions/api.StopConfig"
        }
      }
    },
    "api.MachineGuest": {
      "type": "object",
      "properties": {
        "cpu_kind": {
          "type": "string"
        },
        "cpus": {
          "type": "integer"
        },
        "kernel_args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "memory_mb": {
          "type": "integer"
        }
      }
    },
    "api.MachineHTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.MachineInit": {
      "type": "object",
      "properties": {
        "cmd": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entrypoint": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exec": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tty": {
          "type": "boolean"
        }
      }
    },
    "api.MachineMetrics": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      }
    },
    "api.MachineMount": {
      "type": "object",
      "properties": {
        "encrypted": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size_gb": {
          "type": "integer"
        },
        "volume": {
          "type": "string"
        }
      }
    },
    "api.MachinePort": {
      "type": "object",
      "properties": {
        "end_port": {
          "type": "integer"
        },
        "force_https": {
          "type": "boolean"
        },
        "handlers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "http_options": {
          "$ref": "#/definitions/api.HTTPOptions"
        },
        "port": {
          "type": "integer"
        },
        "proxy_proto_options": {
          "$ref": "#/definitions/api.ProxyProtoOptions"
        },
        "start_port": {
          "type": "integer"
        },
        "tls_options": {
          "$ref": "#/definitions/api.TLSOptions"
        }
      }
    },
    "api.MachineProcess": {
      "type": "object",
      "properties": {
        "cmd": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entrypoint": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "exec": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      }
    },
    "api.MachineRestart": {
      "type": "object",
      "properties": {
        "max_retries": {
          "description": "MaxRetries is only relevant with the on-failure policy.",
          "type": "integer"
        },
        "policy": {
          "type": "string"
        }
      }
    },
    "api.MachineService": {
      "type": "object",
      "properties": {
        "autostart": {
          "type": "boolean"
        },
        "autostop": {
          "type": "boolean"
        },
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.MachineCheck"
          }
        },
        "concurrency": {
          "$ref": "#/definitions/api.MachineServiceConcurrency"
        },
        "force_instance_description": {
          "type": "string"
        },
        "force_instance_key": {
          "type": "string"
        },
        "internal_port": {
          "type": "integer"
        },
        "min_machines_running": {
          "type": "integer"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.MachinePort"
          }
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "api.MachineServiceConcurrency": {
      "type": "object",
      "properties": {
        "hard_limit": {
          "type": "integer"
        },
        "soft_limit": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "api.ProxyProtoOptions": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      }
    },
    "api.Static": {
      "type": "object",
      "required": [
        "guest_path",
        "url_prefix"
      ],
      "properties": {
        "guest_path": {
          "type": "string"
        },
        "url_prefix": {
          "type": "string"
        }
      }
    },
    "api.StopConfig": {
      "type": "object",
      "properties": {
        "signal": {
          "type": "string"
        },
        "timeout": {
          "$ref": "#/definitions/api.Duration"
        }
      }
    },
    "api.TLSOptions": {
      "type": "object",
      "properties": {
        "alpn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default_self_signed": {
          "type": "boolean"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "main.createLeaseRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "ttl": {
          "type": "integer"
        }
      }
    },
    "main.imageRef": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "registry": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "main.listenSocket": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "proto": {
          "type": "string"
        }
      }
    },
    "main.processStat": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string"
        },
        "cpu": {
          "type": "integer"
        },
        "directory": {
          "type": "string"
        },
        "listen_sockets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/main.listenSocket"
          }
        },
        "pid": {
          "type": "integer"
        },
        "rss": {
          "type": "integer"
        },
        "rtime": {
          "type": "integer"
        },
        "stime": {
          "type": "integer"
        }
      }
    },
    "queries.GetVolumeByEncodedIDRow": {
      "type": "object",
      "properties": {
        "bytesTotal": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string"
        },
        "encodedID": {
          "type": "string"
        },
        "encrypted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "mountable": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "node": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "queries.GetVolumesByAppIDRow": {
      "type": "object",
      "properties": {
        "appID": {
          "type": "integer"
        },
        "bytesTotal": {
          "type": "integer"
        },
        "createdAt": {
          "type": "string"
        },
        "encodedID": {
          "type": "string"
        },
        "encrypted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "mountable": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "node": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "url": "https://fly.io/docs/machines/working-with-machines/"
  }
}